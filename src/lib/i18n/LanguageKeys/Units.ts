import { FT, T } from '@skyra/http-framework-i18n';

export const AstronomicalUnit = T('units:astronomicalUnit');
export const Feet = T('units:feet');
export const Inch = T('units:inch');
export const LightSecond = T('units:lightSecond');
export const LightYear = T('units:lightYear');
export const Meter = T('units:meter');
export const Mile = T('units:mile');
export const NauticalMile = T('units:nauticalMile');
export const Yard = T('units:yard');
export const Parsec = T('units:parsec');
export const ElectronVolt = T('units:electronVolt');
export const Grain = T('units:grain');
export const Gram = T('units:gram');
export const Ounce = T('units:ounce');
export const Pound = T('units:pound');
export const Quintal = T('units:quintal');
export const Ton = T('units:ton');
export const Tonne = T('units:tonne');
export const Century = T('units:century');
export const Day = T('units:day');
export const Hour = T('units:hour');
export const Minute = T('units:minute');
export const Second = T('units:second');
export const Week = T('units:week');
export const Year = T('units:year');
export const Millennium = T('units:millennium');
export const Celsius = T('units:celsius');
export const Delisle = T('units:delisle');
export const Fahrenheit = T('units:fahrenheit');
export const GasMark = T('units:gasMark');
export const Kelvin = T('units:kelvin');
export const Newton = T('units:newton');
export const Rankine = T('units:rankine');
export const Reaumur = T('units:reaumur');
export const Romer = T('units:romer');
export const Acre = T('units:acre');
export const Are = T('units:are');
export const Barn = T('units:barn');
export const Hectare = T('units:hectare');
export const Barrel = T('units:barrel');
export const Bushel = T('units:bushel');
export const Cord = T('units:cord');
export const Dram = T('units:dram');
export const FluidOunce = T('units:fluidOunce');
export const GallonImperial = T('units:gallonImperial');
export const GallonUS = T('units:gallonUS');
export const Gill = T('units:gill');
export const Hogshead = T('units:hogshead');
export const Liter = T('units:liter');
export const Minim = T('units:minim');
export const Peck = T('units:peck');
export const Pint = T('units:pint');
export const Quart = T('units:quart');
export const Tablespoon = T('units:tablespoon');
export const Teaspoon = T('units:teaspoon');

export const PrefixUnit = FT<{ prefix: string; unit: string }>('units:prefixUnit');
export const Quetta = T('units:quetta');
export const Ronna = T('units:ronna');
export const Yotta = T('units:yotta');
export const Zetta = T('units:zetta');
export const Exa = T('units:exa');
export const Peta = T('units:peta');
export const Tera = T('units:tera');
export const Giga = T('units:giga');
export const Mega = T('units:mega');
export const Kilo = T('units:kilo');
export const Hecto = T('units:hecto');
export const Deca = T('units:deca');
export const Deci = T('units:deci');
export const Centi = T('units:centi');
export const Milli = T('units:milli');
export const Micro = T('units:micro');
export const Nano = T('units:nano');
export const Pico = T('units:pico');
export const Femto = T('units:femto');
export const Atto = T('units:atto');
export const Zepto = T('units:zepto');
export const Yocto = T('units:yocto');
export const Ronto = T('units:ronto');
export const Quecto = T('units:quecto');

export const PrefixDimension = FT<{ dimension: string; unit: string }>('units:prefixDimension');
export const Square = T('units:square');
export const Cubic = T('units:cubic');
